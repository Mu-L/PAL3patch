################ 配音插件样例数据说明 ################


==== 文件说明 ====

样例数据中包含的文件如下：
|   README_VOICE.txt // 本说明文件
|   VoiceConfig.txt // 配音插件总配置文件
\---voice // 所有数据文件都存放在此目录下
    +---config // 数据配置文件文件夹
    |       cbdialog.txt // 战斗对话配音的数据配置文件
    |       ending.txt   // 配置结局脚本的数据配置文件
    |       splash.txt   // 配置欢迎脚本的数据配置文件
    +---data // 音频、视频、图片数据文件夹
    |   +---audio // 音频文件夹
    |   |   \---cbdialog // 战斗对话数据文件夹
    |   +---image // 图片文件夹
    |   \---video // 视频文件夹
    \---script // 脚本文件夹
        |   splash.txt // 欢迎脚本
        \---ending // 结局脚本文件夹
            |   common.txt // 公共结局脚本
            |   end1.txt   // 雪见结局脚本
            |   end2.txt   // 龙葵结局脚本
            |   end3.txt   // 紫萱结局脚本
            |   end4.txt   // 花楹结局脚本
            |   end5.txt   // 完美结局脚本
            \---setvar // 结局辅助脚本文件夹
                    end1setvar.txt
                    end2setvar.txt
                    end3setvar.txt
                    end4setvar.txt
                    end5setvar.txt



==== 总配置文件: VoiceConfig.txt ====

此文件是配音插件的总配置文件，控制着整个配音插件的行为。
详细说明见其内注释。



==== 数据配置文件 ====

数据配置文件是用来配置语音条目到音频文件/脚本文件的映射关系的。
数据配置文件中：（1）可以有空行（2）“;”开头的是注释行（3）一行一个语音条目

语音条目语法为：（每行数据需要严格按照格式，不能有多余空格或其他字符）
    音频文件|音量|开始前脚本:结束后脚本|校验和|类型|具体内容
其中：
    音频文件   - 在游戏中出现此条目时要播放的音频文件（格式为 WAV 或 MP3），若为 x 则表示没有音频与之对应
    音量       - 此条目播放时的音量，取值范围为 0.000 - 1.000
    开始前脚本 - 播放此条目前需要运行的脚本文件，若留空则不执行任何脚本
    结束后脚本 - 播放此条目后需要运行的脚本文件，若留空则不执行任何脚本
    校验和     - 根据“类型”和“具体内容”计算的校验和，请不要修改
    类型       - 条目对应的类型（TXT - 剧情对话；CAP - 诗词；MOV - 过场动画；CBD - 战斗对话）
    具体内容   - 条目的具体内容，根据“类型”不同，可能是文本，也有可能是文件名



==== 配音方法（得到数据配置文件的方法） ====
    将 VoiceConfig.txt 中的 LOGUNKNOWN 选项设为 1，然后正常执行游戏，
    此时游戏会将遇到的未知条目记录到 VoiceDataLog.txt 文件中（可用 VoiceLogMonitor.exe 即时地查看）。
    游戏进行一段剧情后，VoiceDataLog.txt 文件中就会有许多新生成的语音条目，
    将它们拷贝到一个新的文本文件中，并适当地修改其中“音频文件”等条目信息，使其指向音频文件的位置，
    最后在 VoiceConfig.txt 中用 LOAD 指令加载这个新的文本文件即可。
    （建议把音频文件放入 voice\data\audio 文件夹下）
    （由于战斗对话随机出现，样例文件已附带有所有战斗对话，文件位于 voice\config\cbdialog.txt 中）



==== 脚本文件 ====

脚本文件可以用来执行复杂的任务，例如显示图片、播放视频等。脚本文件想要执行，必须有语音条目与之对应。
脚本文件中：（1）可以有空行（2）“;”开头的是注释行（3）一条指令占用一行
            （4）字符串需用引号“"”括起来，其中按 C 语法进行转义（即“\\”代表“\”，“\n”代表“换行”）
            （5）用到字符串的地方可以使用变量，语法为 $变量名
            （6）用到颜色的地方一律使用六位十六进制表示，即 RRGGBB，例如 FF0000 表示红色
            （7）用到音量的地方一律使用取值范围为 0.000 - 1.000 的小数表示

指令表：
 1. 调用脚本
     语法：
         CALL 脚本文件
     作用：
         调用另一脚本文件，然后继续执行
 2. 设置变量
     语法：
         SETVAR 变量名 值
     作用：
         给指定的变量赋值
 3. 输出信息
     语法：
         LOG 信息内容
     作用：
         向日志文件 VoiceLog.txt 中输出信息
 4. 等待
     语法：
         SLEEP 毫秒数 是否可中断
     作用：
         等待指定的毫秒数
         若“是否可中断”设为 1，则在等待过程中，用户可按 ESC 中断等待
         若“是否可中断”设为 0，则不可中断
 5. 清屏
     语法：
         CLS 颜色
     作用：
         将屏幕涂满指定的颜色
 6. 播放视频
     语法：
         PLAYVIDEO 边框色 音量 视频文件
     作用：
         播放指定的视频文件，必须是 1.0x 版本的 BIK 格式（详见后面说明）
 7. 显示图片
     语法：
         SHOWPICTURE 边框色 持续毫秒数 图片文件
     作用：
         显示指定的图片文件，常用图片格式均可
 8. 开始播放音频
     语法：
         STARTAUDIO 音量 音频文件
     作用：
         在后台播放指定的音频文件，格式只能为 WAV 或 MP3
 9. 停止播放音频
     语法：
         STOPAUDIO
     作用：
         停止之前由 STARTAUDIO 指令播放的音频



==== 视频格式 ====

仙剑三使用了 1.0x 版本的 Bink SDK 作为其播放视频的外部库，配音插件也使用了此库来播放视频。
由于该库版本较老，只认识 1.0x 版本的 BIK 格式的视频。因此需要将所需视频进行转码。
所需软件：
    MediaCoder （任何版本都可以）
    QuickTime  （任何版本都可以）
    Bink and Smacker （也称 RAD Video Tools，必须是 1.0x 版本）
转码思路：
    由于 Bink and Smacker 这个软件十分的挑格式，所以需要先将源视频转为这个工具所能认识的 MOV 格式，
    再使用该工具转换为 BIK 格式。
转码流程：
 1. 源视频 => MOV 格式
    使用 MediaCoder
      容器选择 MOV
      视频格式选择 AVC（即 H.264），如果视频已是此格式，可以直接选择“复制视频流”跳过转换
      音频格式选择 ALAC，采样率设为原始
 2. MOV 格式 => BIK 格式
    使用 Bink and Smacker，但是事先需安装 QuickTime 作为解码器使用
      直接在界面上选择 MOV 文件然后转码即可。
      在转码过程中，注意是否有“音频采样率”等信息，否则转出来的文件可能没有音频。
      如果实在无法同时转码视频和音频，也可先用 MediaCoder 将音轨提取出来，
      然后使用 Bink and Smacker 中的“混合音频”功能将音轨混入无音频的 BIK 文件中。

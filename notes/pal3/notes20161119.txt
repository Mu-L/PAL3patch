【战斗对话框位置修正】
设置内容、移动战斗对话框位置的代码在CCBStage::ProcShowCombatDialog函数中
它会把对话框位置移动到距某个点(-168,-128)的位置（贴图大小256x128）
鉴于168非常接近宽度的一半256/2=128，因此横向近似采用TR_SCALE_CENTER变换方式，实际效果较好
纵向采用TR_SCALE_HIGH，由于宽度和位移完全匹配，所以纵向没有误差
战斗对话框中第二行文字看起来有点向下错位，这不是因为变换引起的，游戏中原来就是这样

【relativetimer: 使用相对计时器（修正武器拖影问题）】
有时紫萱、雪见的武器会产生持久不消失的拖影，这是因为开机时间过长造成的，如果几周不关机，再运行游戏，就会出现此问题。
因为timeGetTime和QueryPerformanceCounter会返回“绝对时间”，而且没有“相对化”（即把数值减去程序刚开始时的计时器数值）
这导致游戏中“时间”的绝对数值过大。猜测是由于浮点数精度问题，大数值（绝对时间）把小数值（相对时间）吃掉了。
临时的解决办法很简单，只要重启机器就可以了，但是补丁仍需要修正这个问题。
永久解决办法就是把这两个函数HOOK掉，在我们自己的代码中为程序做“相对化”处理。
当然这两个解决方案是有缺陷的，理论上，如果程序运行了好几周，仍然会出现此问题（不过这不太可能发生）
经过测试发现，如果timeGetTime函数返回值加上一个较大数值后，紫萱、雪见的武器仍然是正常的。
但是把QueryPerformanceCounter加上一个较大数之后，武器就会出现拖影。
所以QueryPerformanceCounter需要进行HOOK，而timeGetTime不一定需要。
但是为了安全起见，这两个函数在relativetimer中都进行了“相对化”HOOK。

【fixcombatui: 修正战斗界面】
战斗界面的修正主要在CCBUI_Create_wrapper中完成，它会在CCBUI_Create调用完毕后为各个窗口添加PTAG。
注意：最好先进行逆向工作，不要急于求成，显然对CCBUI_Create进行HOOK比在各种Create函数中打ASMPATCH效果好得多！
另外还有一些东西是PTAG解决不了的，例如“2D/3D火花特效(C2DSpark/C3DSpark)”、“阵（编辑五灵站位）”等，因此需要手工处理。


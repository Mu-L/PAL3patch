【替换PAL3A的GBENGINE.DLL不能带来LostDevice的处理】
如果使用PAL3A的GBENGINE.DLL替换PAL3的，不仅会使程序在加载时崩溃（见notes20160809.txt）
并且不能带来免费的“LostDevice”的处理，程序仍然无法处理设备丢失的情况。
另外，通过对比两个DLL的到处表，会发现PAL3的是PAL3A的子集。（不知为何会导致崩溃）
通过观察，PAL3A是真正处理好了设备丢失的情况（在“切换用户”等情况下不出问题）

【setlocale：切换语言的补丁】
参数值1对应简体中文，参数值2对应繁体中文。
通过HOOK两个KENREL32.DLL中的函数：WideCharToMultiByte和MultiByteToWideChar（主要是后者）
HOOK的方法是：在程序运行时修改PAL3.EXE和GBENGINE.DLL的导入表中的IAT对应项。
此种直接用GetProcessAddress得到的地址去查找并修改IAT表项的方法与KernelEx for Win9x不兼容。
不过win9x应该不支持unicode，所以这个功能就无所谓了。
有一点有趣的是：IAT项好像不能使用WriteProcessMemory来修改。
最终采取先用VirtualProtect修改页面权限，实际修改后再恢复页面权限的方法。
如果要解决testcombat的乱码问题还需要对COMCTL32.DLL进行HOOK。（详情见下）

【testcombat只能用于简体版游戏】
不论游戏是繁体版还是简体版，程序中内置的调试用字符串很多都是cp936的简体中文字符串（国标码），没有完全采用UNICODE。
因此如果使用繁体版游戏，则对话框中既有cp936的简体中文（国标码）也有cp950的繁体中文（BIG5码），会造成显示混乱。
这种混乱即使setlocale也无法解决，因为setlocale对应的挂钩函数无法判断字符串的编码。
因此setlocale这个选项只能用于在非简体系统上运行简体版游戏中的testcombat功能，这时setlocale=1

【dpiawareness：指示是否程序DPI兼容】
XP及以下：不支持，设置此项没有效果
Vista, 7, 8：只支持SetProcessDPIAware()，即此选项只有打开(非零)和关闭(零)的区分
8.1及以上：支持SetProcessDpiAwareness()，即区分PROCESS_SYSTEM_DPI_AWARE=1和PROCESS_PER_MONITOR_DPI_AWARE=2
此选项只对窗口模式的游戏有效，对全屏游戏无效

【windowed：是否以窗口模式运行】
这个功能现在不完整，将来会改变。
如果以窗口模式运行，则可以在程序间切换而不会引起游戏崩溃。
但是不可以进行“锁定”，“切换用户”，“睡眠”等，否则还是会引起设备丢失从而导致游戏崩溃。


